// DO NOT EDIT THIS FILE. ALL CHANGES WILL BE ERASED WHEN THIS FILE IS REGENERATED

#include <stdbool.h>
#include "jthread.h"

static const char *instr_names[256] = {
	"nop",
	"aconst_null",
	"iconst_m1",
	"iconst_0",
	"iconst_1",
	"iconst_2",
	"iconst_3",
	"iconst_4",
	"iconst_5",
	"lconst_0",
	"lconst_1",
	"fconst_0",
	"fconst_1",
	"fconst_2",
	"dconst_0",
	"dconst_1",
	"bipush",
	"sipush",
	"ldc",
	"ldc_w",
	"ldc2_w",
	"iload",
	"lload",
	"fload",
	"dload",
	"aload",
	"iload_0",
	"iload_1",
	"iload_2",
	"iload_3",
	"lload_0",
	"lload_1",
	"lload_2",
	"lload_3",
	"fload_0",
	"fload_1",
	"fload_2",
	"fload_3",
	"dload_0",
	"dload_1",
	"dload_2",
	"dload_3",
	"aload_0",
	"aload_1",
	"aload_2",
	"aload_3",
	"iaload",
	"laload",
	"faload",
	"daload",
	"aaload",
	"baload",
	"caload",
	"saload",
	"istore",
	"lstore",
	"fstore",
	"dstore",
	"astore",
	"istore_0",
	"istore_1",
	"istore_2",
	"istore_3",
	"lstore_0",
	"lstore_1",
	"lstore_2",
	"lstore_3",
	"fstore_0",
	"fstore_1",
	"fstore_2",
	"fstore_3",
	"dstore_0",
	"dstore_1",
	"dstore_2",
	"dstore_3",
	"astore_0",
	"astore_1",
	"astore_2",
	"astore_3",
	"iastore",
	"lastore",
	"fastore",
	"dastore",
	"aastore",
	"bastore",
	"castore",
	"sastore",
	"pop",
	"pop2",
	"dup",
	"dup_x1",
	"dup_x2",
	"dup2",
	"dup2_x1",
	"dup2_x2",
	"swap",
	"iadd",
	"ladd",
	"fadd",
	"dadd",
	"isub",
	"lsub",
	"fsub",
	"dsub",
	"imul",
	"lmul",
	"fmul",
	"dmul",
	"idiv",
	"ldiv",
	"fdiv",
	"ddiv",
	"irem",
	"lrem",
	"frem",
	"drem",
	"ineg",
	"lneg",
	"fneg",
	"dneg",
	"ishl",
	"lshl",
	"ishr",
	"lshr",
	"iushr",
	"lushr",
	"iand",
	"land",
	"ior",
	"lor",
	"ixor",
	"lxor",
	"iinc",
	"i2l",
	"i2f",
	"i2d",
	"l2i",
	"l2f",
	"l2d",
	"f2i",
	"f2l",
	"f2d",
	"d2i",
	"d2l",
	"d2f",
	"i2b",
	"i2c",
	"i2s",
	"lcmp",
	"fcmpl",
	"fcmpg",
	"dcmpl",
	"dcmpg",
	"ifeq",
	"ifne",
	"iflt",
	"ifge",
	"ifgt",
	"ifle",
	"if_icmpeq",
	"if_icmpne",
	"if_icmplt",
	"if_icmpge",
	"if_icmpgt",
	"if_icmple",
	"if_acmpeq",
	"if_acmpne",
	"goto",
	"jsr",
	"ret",
	"tableswitch",
	"lookupswitch",
	"ireturn",
	"lreturn",
	"freturn",
	"dreturn",
	"areturn",
	"return",
	"getstatic",
	"putstatic",
	"getfield",
	"putfield",
	"invokevirtual",
	"invokespecial",
	"invokestatic",
	"invokeinterface",
	"invokedynamic",
	"new",
	"newarray",
	"anewarray",
	"arraylength",
	"athrow",
	"checkcast",
	"instanceof",
	"monitorenter",
	"monitorexit",
	"wide",
	"multianewarray",
	"ifnull",
	"ifnonnull",
	"goto_w",
	"jsr_w",
	"breakpoint",
	"unknown",
	"unknown",
	"unknown",
	"unknown",
	"unknown",
	"unknown",
	"unknown",
	"unknown",
	"unknown",
	"unknown",
	"unknown",
	"unknown",
	"unknown",
	"unknown",
	"unknown",
	"unknown",
	"unknown",
	"unknown",
	"unknown",
	"unknown",
	"unknown",
	"unknown",
	"unknown",
	"unknown",
	"unknown",
	"unknown",
	"unknown",
	"unknown",
	"unknown",
	"unknown",
	"unknown",
	"unknown",
	"unknown",
	"unknown",
	"unknown",
	"unknown",
	"unknown",
	"unknown",
	"unknown",
	"unknown",
	"unknown",
	"unknown",
	"unknown",
	"unknown",
	"unknown",
	"unknown",
	"unknown",
	"unknown",
	"unknown",
	"unknown",
	"unknown",
	"impdep1",
	"impdep2",
};

int handle_instr_unknown(jthread_t *jthread, bool wide);
int handle_instr_nop(jthread_t *jthread, bool wide);
int handle_instr_aconst_null(jthread_t *jthread, bool wide);
int handle_instr_iconst_m1(jthread_t *jthread, bool wide);
int handle_instr_iconst_0(jthread_t *jthread, bool wide);
int handle_instr_iconst_1(jthread_t *jthread, bool wide);
int handle_instr_iconst_2(jthread_t *jthread, bool wide);
int handle_instr_iconst_3(jthread_t *jthread, bool wide);
int handle_instr_iconst_4(jthread_t *jthread, bool wide);
int handle_instr_iconst_5(jthread_t *jthread, bool wide);
int handle_instr_lconst_0(jthread_t *jthread, bool wide);
int handle_instr_lconst_1(jthread_t *jthread, bool wide);
int handle_instr_fconst_0(jthread_t *jthread, bool wide);
int handle_instr_fconst_1(jthread_t *jthread, bool wide);
int handle_instr_fconst_2(jthread_t *jthread, bool wide);
int handle_instr_dconst_0(jthread_t *jthread, bool wide);
int handle_instr_dconst_1(jthread_t *jthread, bool wide);
int handle_instr_bipush(jthread_t *jthread, bool wide);
int handle_instr_sipush(jthread_t *jthread, bool wide);
int handle_instr_ldc(jthread_t *jthread, bool wide);
int handle_instr_ldc_w(jthread_t *jthread, bool wide);
int handle_instr_ldc2_w(jthread_t *jthread, bool wide);
int handle_instr_iload(jthread_t *jthread, bool wide);
int handle_instr_lload(jthread_t *jthread, bool wide);
int handle_instr_fload(jthread_t *jthread, bool wide);
int handle_instr_dload(jthread_t *jthread, bool wide);
int handle_instr_aload(jthread_t *jthread, bool wide);
int handle_instr_iload_0(jthread_t *jthread, bool wide);
int handle_instr_iload_1(jthread_t *jthread, bool wide);
int handle_instr_iload_2(jthread_t *jthread, bool wide);
int handle_instr_iload_3(jthread_t *jthread, bool wide);
int handle_instr_lload_0(jthread_t *jthread, bool wide);
int handle_instr_lload_1(jthread_t *jthread, bool wide);
int handle_instr_lload_2(jthread_t *jthread, bool wide);
int handle_instr_lload_3(jthread_t *jthread, bool wide);
int handle_instr_fload_0(jthread_t *jthread, bool wide);
int handle_instr_fload_1(jthread_t *jthread, bool wide);
int handle_instr_fload_2(jthread_t *jthread, bool wide);
int handle_instr_fload_3(jthread_t *jthread, bool wide);
int handle_instr_dload_0(jthread_t *jthread, bool wide);
int handle_instr_dload_1(jthread_t *jthread, bool wide);
int handle_instr_dload_2(jthread_t *jthread, bool wide);
int handle_instr_dload_3(jthread_t *jthread, bool wide);
int handle_instr_aload_0(jthread_t *jthread, bool wide);
int handle_instr_aload_1(jthread_t *jthread, bool wide);
int handle_instr_aload_2(jthread_t *jthread, bool wide);
int handle_instr_aload_3(jthread_t *jthread, bool wide);
int handle_instr_iaload(jthread_t *jthread, bool wide);
int handle_instr_laload(jthread_t *jthread, bool wide);
int handle_instr_faload(jthread_t *jthread, bool wide);
int handle_instr_daload(jthread_t *jthread, bool wide);
int handle_instr_aaload(jthread_t *jthread, bool wide);
int handle_instr_baload(jthread_t *jthread, bool wide);
int handle_instr_caload(jthread_t *jthread, bool wide);
int handle_instr_saload(jthread_t *jthread, bool wide);
int handle_instr_istore(jthread_t *jthread, bool wide);
int handle_instr_lstore(jthread_t *jthread, bool wide);
int handle_instr_fstore(jthread_t *jthread, bool wide);
int handle_instr_dstore(jthread_t *jthread, bool wide);
int handle_instr_astore(jthread_t *jthread, bool wide);
int handle_instr_istore_0(jthread_t *jthread, bool wide);
int handle_instr_istore_1(jthread_t *jthread, bool wide);
int handle_instr_istore_2(jthread_t *jthread, bool wide);
int handle_instr_istore_3(jthread_t *jthread, bool wide);
int handle_instr_lstore_0(jthread_t *jthread, bool wide);
int handle_instr_lstore_1(jthread_t *jthread, bool wide);
int handle_instr_lstore_2(jthread_t *jthread, bool wide);
int handle_instr_lstore_3(jthread_t *jthread, bool wide);
int handle_instr_fstore_0(jthread_t *jthread, bool wide);
int handle_instr_fstore_1(jthread_t *jthread, bool wide);
int handle_instr_fstore_2(jthread_t *jthread, bool wide);
int handle_instr_fstore_3(jthread_t *jthread, bool wide);
int handle_instr_dstore_0(jthread_t *jthread, bool wide);
int handle_instr_dstore_1(jthread_t *jthread, bool wide);
int handle_instr_dstore_2(jthread_t *jthread, bool wide);
int handle_instr_dstore_3(jthread_t *jthread, bool wide);
int handle_instr_astore_0(jthread_t *jthread, bool wide);
int handle_instr_astore_1(jthread_t *jthread, bool wide);
int handle_instr_astore_2(jthread_t *jthread, bool wide);
int handle_instr_astore_3(jthread_t *jthread, bool wide);
int handle_instr_iastore(jthread_t *jthread, bool wide);
int handle_instr_lastore(jthread_t *jthread, bool wide);
int handle_instr_fastore(jthread_t *jthread, bool wide);
int handle_instr_dastore(jthread_t *jthread, bool wide);
int handle_instr_aastore(jthread_t *jthread, bool wide);
int handle_instr_bastore(jthread_t *jthread, bool wide);
int handle_instr_castore(jthread_t *jthread, bool wide);
int handle_instr_sastore(jthread_t *jthread, bool wide);
int handle_instr_pop(jthread_t *jthread, bool wide);
int handle_instr_pop2(jthread_t *jthread, bool wide);
int handle_instr_dup(jthread_t *jthread, bool wide);
int handle_instr_dup_x1(jthread_t *jthread, bool wide);
int handle_instr_dup_x2(jthread_t *jthread, bool wide);
int handle_instr_dup2(jthread_t *jthread, bool wide);
int handle_instr_dup2_x1(jthread_t *jthread, bool wide);
int handle_instr_dup2_x2(jthread_t *jthread, bool wide);
int handle_instr_swap(jthread_t *jthread, bool wide);
int handle_instr_iadd(jthread_t *jthread, bool wide);
int handle_instr_ladd(jthread_t *jthread, bool wide);
int handle_instr_fadd(jthread_t *jthread, bool wide);
int handle_instr_dadd(jthread_t *jthread, bool wide);
int handle_instr_isub(jthread_t *jthread, bool wide);
int handle_instr_lsub(jthread_t *jthread, bool wide);
int handle_instr_fsub(jthread_t *jthread, bool wide);
int handle_instr_dsub(jthread_t *jthread, bool wide);
int handle_instr_imul(jthread_t *jthread, bool wide);
int handle_instr_lmul(jthread_t *jthread, bool wide);
int handle_instr_fmul(jthread_t *jthread, bool wide);
int handle_instr_dmul(jthread_t *jthread, bool wide);
int handle_instr_idiv(jthread_t *jthread, bool wide);
int handle_instr_ldiv(jthread_t *jthread, bool wide);
int handle_instr_fdiv(jthread_t *jthread, bool wide);
int handle_instr_ddiv(jthread_t *jthread, bool wide);
int handle_instr_irem(jthread_t *jthread, bool wide);
int handle_instr_lrem(jthread_t *jthread, bool wide);
int handle_instr_frem(jthread_t *jthread, bool wide);
int handle_instr_drem(jthread_t *jthread, bool wide);
int handle_instr_ineg(jthread_t *jthread, bool wide);
int handle_instr_lneg(jthread_t *jthread, bool wide);
int handle_instr_fneg(jthread_t *jthread, bool wide);
int handle_instr_dneg(jthread_t *jthread, bool wide);
int handle_instr_ishl(jthread_t *jthread, bool wide);
int handle_instr_lshl(jthread_t *jthread, bool wide);
int handle_instr_ishr(jthread_t *jthread, bool wide);
int handle_instr_lshr(jthread_t *jthread, bool wide);
int handle_instr_iushr(jthread_t *jthread, bool wide);
int handle_instr_lushr(jthread_t *jthread, bool wide);
int handle_instr_iand(jthread_t *jthread, bool wide);
int handle_instr_land(jthread_t *jthread, bool wide);
int handle_instr_ior(jthread_t *jthread, bool wide);
int handle_instr_lor(jthread_t *jthread, bool wide);
int handle_instr_ixor(jthread_t *jthread, bool wide);
int handle_instr_lxor(jthread_t *jthread, bool wide);
int handle_instr_iinc(jthread_t *jthread, bool wide);
int handle_instr_i2l(jthread_t *jthread, bool wide);
int handle_instr_i2f(jthread_t *jthread, bool wide);
int handle_instr_i2d(jthread_t *jthread, bool wide);
int handle_instr_l2i(jthread_t *jthread, bool wide);
int handle_instr_l2f(jthread_t *jthread, bool wide);
int handle_instr_l2d(jthread_t *jthread, bool wide);
int handle_instr_f2i(jthread_t *jthread, bool wide);
int handle_instr_f2l(jthread_t *jthread, bool wide);
int handle_instr_f2d(jthread_t *jthread, bool wide);
int handle_instr_d2i(jthread_t *jthread, bool wide);
int handle_instr_d2l(jthread_t *jthread, bool wide);
int handle_instr_d2f(jthread_t *jthread, bool wide);
int handle_instr_i2b(jthread_t *jthread, bool wide);
int handle_instr_i2c(jthread_t *jthread, bool wide);
int handle_instr_i2s(jthread_t *jthread, bool wide);
int handle_instr_lcmp(jthread_t *jthread, bool wide);
int handle_instr_fcmpl(jthread_t *jthread, bool wide);
int handle_instr_fcmpg(jthread_t *jthread, bool wide);
int handle_instr_dcmpl(jthread_t *jthread, bool wide);
int handle_instr_dcmpg(jthread_t *jthread, bool wide);
int handle_instr_ifeq(jthread_t *jthread, bool wide);
int handle_instr_ifne(jthread_t *jthread, bool wide);
int handle_instr_iflt(jthread_t *jthread, bool wide);
int handle_instr_ifge(jthread_t *jthread, bool wide);
int handle_instr_ifgt(jthread_t *jthread, bool wide);
int handle_instr_ifle(jthread_t *jthread, bool wide);
int handle_instr_if_icmpeq(jthread_t *jthread, bool wide);
int handle_instr_if_icmpne(jthread_t *jthread, bool wide);
int handle_instr_if_icmplt(jthread_t *jthread, bool wide);
int handle_instr_if_icmpge(jthread_t *jthread, bool wide);
int handle_instr_if_icmpgt(jthread_t *jthread, bool wide);
int handle_instr_if_icmple(jthread_t *jthread, bool wide);
int handle_instr_if_acmpeq(jthread_t *jthread, bool wide);
int handle_instr_if_acmpne(jthread_t *jthread, bool wide);
int handle_instr_goto(jthread_t *jthread, bool wide);
int handle_instr_jsr(jthread_t *jthread, bool wide);
int handle_instr_ret(jthread_t *jthread, bool wide);
int handle_instr_tableswitch(jthread_t *jthread, bool wide);
int handle_instr_lookupswitch(jthread_t *jthread, bool wide);
int handle_instr_ireturn(jthread_t *jthread, bool wide);
int handle_instr_lreturn(jthread_t *jthread, bool wide);
int handle_instr_freturn(jthread_t *jthread, bool wide);
int handle_instr_dreturn(jthread_t *jthread, bool wide);
int handle_instr_areturn(jthread_t *jthread, bool wide);
int handle_instr_return(jthread_t *jthread, bool wide);
int handle_instr_getstatic(jthread_t *jthread, bool wide);
int handle_instr_putstatic(jthread_t *jthread, bool wide);
int handle_instr_getfield(jthread_t *jthread, bool wide);
int handle_instr_putfield(jthread_t *jthread, bool wide);
int handle_instr_invokevirtual(jthread_t *jthread, bool wide);
int handle_instr_invokespecial(jthread_t *jthread, bool wide);
int handle_instr_invokestatic(jthread_t *jthread, bool wide);
int handle_instr_invokeinterface(jthread_t *jthread, bool wide);
int handle_instr_invokedynamic(jthread_t *jthread, bool wide);
int handle_instr_new(jthread_t *jthread, bool wide);
int handle_instr_newarray(jthread_t *jthread, bool wide);
int handle_instr_anewarray(jthread_t *jthread, bool wide);
int handle_instr_arraylength(jthread_t *jthread, bool wide);
int handle_instr_athrow(jthread_t *jthread, bool wide);
int handle_instr_checkcast(jthread_t *jthread, bool wide);
int handle_instr_instanceof(jthread_t *jthread, bool wide);
int handle_instr_monitorenter(jthread_t *jthread, bool wide);
int handle_instr_monitorexit(jthread_t *jthread, bool wide);
int handle_instr_wide(jthread_t *jthread, bool wide);
int handle_instr_multianewarray(jthread_t *jthread, bool wide);
int handle_instr_ifnull(jthread_t *jthread, bool wide);
int handle_instr_ifnonnull(jthread_t *jthread, bool wide);
int handle_instr_goto_w(jthread_t *jthread, bool wide);
int handle_instr_jsr_w(jthread_t *jthread, bool wide);
int handle_instr_breakpoint(jthread_t *jthread, bool wide);
int handle_instr_impdep1(jthread_t *jthread, bool wide);
int handle_instr_impdep2(jthread_t *jthread, bool wide);

static int (* const instr_table[256])(jthread_t *jthread, bool wide) = {
	handle_instr_nop,
	handle_instr_aconst_null,
	handle_instr_iconst_m1,
	handle_instr_iconst_0,
	handle_instr_iconst_1,
	handle_instr_iconst_2,
	handle_instr_iconst_3,
	handle_instr_iconst_4,
	handle_instr_iconst_5,
	handle_instr_lconst_0,
	handle_instr_lconst_1,
	handle_instr_fconst_0,
	handle_instr_fconst_1,
	handle_instr_fconst_2,
	handle_instr_dconst_0,
	handle_instr_dconst_1,
	handle_instr_bipush,
	handle_instr_sipush,
	handle_instr_ldc,
	handle_instr_ldc_w,
	handle_instr_ldc2_w,
	handle_instr_iload,
	handle_instr_lload,
	handle_instr_fload,
	handle_instr_dload,
	handle_instr_aload,
	handle_instr_iload_0,
	handle_instr_iload_1,
	handle_instr_iload_2,
	handle_instr_iload_3,
	handle_instr_lload_0,
	handle_instr_lload_1,
	handle_instr_lload_2,
	handle_instr_lload_3,
	handle_instr_fload_0,
	handle_instr_fload_1,
	handle_instr_fload_2,
	handle_instr_fload_3,
	handle_instr_dload_0,
	handle_instr_dload_1,
	handle_instr_dload_2,
	handle_instr_dload_3,
	handle_instr_aload_0,
	handle_instr_aload_1,
	handle_instr_aload_2,
	handle_instr_aload_3,
	handle_instr_iaload,
	handle_instr_laload,
	handle_instr_faload,
	handle_instr_daload,
	handle_instr_aaload,
	handle_instr_baload,
	handle_instr_caload,
	handle_instr_saload,
	handle_instr_istore,
	handle_instr_lstore,
	handle_instr_fstore,
	handle_instr_dstore,
	handle_instr_astore,
	handle_instr_istore_0,
	handle_instr_istore_1,
	handle_instr_istore_2,
	handle_instr_istore_3,
	handle_instr_lstore_0,
	handle_instr_lstore_1,
	handle_instr_lstore_2,
	handle_instr_lstore_3,
	handle_instr_fstore_0,
	handle_instr_fstore_1,
	handle_instr_fstore_2,
	handle_instr_fstore_3,
	handle_instr_dstore_0,
	handle_instr_dstore_1,
	handle_instr_dstore_2,
	handle_instr_dstore_3,
	handle_instr_astore_0,
	handle_instr_astore_1,
	handle_instr_astore_2,
	handle_instr_astore_3,
	handle_instr_iastore,
	handle_instr_lastore,
	handle_instr_fastore,
	handle_instr_dastore,
	handle_instr_aastore,
	handle_instr_bastore,
	handle_instr_castore,
	handle_instr_sastore,
	handle_instr_pop,
	handle_instr_pop2,
	handle_instr_dup,
	handle_instr_dup_x1,
	handle_instr_dup_x2,
	handle_instr_dup2,
	handle_instr_dup2_x1,
	handle_instr_dup2_x2,
	handle_instr_swap,
	handle_instr_iadd,
	handle_instr_ladd,
	handle_instr_fadd,
	handle_instr_dadd,
	handle_instr_isub,
	handle_instr_lsub,
	handle_instr_fsub,
	handle_instr_dsub,
	handle_instr_imul,
	handle_instr_lmul,
	handle_instr_fmul,
	handle_instr_dmul,
	handle_instr_idiv,
	handle_instr_ldiv,
	handle_instr_fdiv,
	handle_instr_ddiv,
	handle_instr_irem,
	handle_instr_lrem,
	handle_instr_frem,
	handle_instr_drem,
	handle_instr_ineg,
	handle_instr_lneg,
	handle_instr_fneg,
	handle_instr_dneg,
	handle_instr_ishl,
	handle_instr_lshl,
	handle_instr_ishr,
	handle_instr_lshr,
	handle_instr_iushr,
	handle_instr_lushr,
	handle_instr_iand,
	handle_instr_land,
	handle_instr_ior,
	handle_instr_lor,
	handle_instr_ixor,
	handle_instr_lxor,
	handle_instr_iinc,
	handle_instr_i2l,
	handle_instr_i2f,
	handle_instr_i2d,
	handle_instr_l2i,
	handle_instr_l2f,
	handle_instr_l2d,
	handle_instr_f2i,
	handle_instr_f2l,
	handle_instr_f2d,
	handle_instr_d2i,
	handle_instr_d2l,
	handle_instr_d2f,
	handle_instr_i2b,
	handle_instr_i2c,
	handle_instr_i2s,
	handle_instr_lcmp,
	handle_instr_fcmpl,
	handle_instr_fcmpg,
	handle_instr_dcmpl,
	handle_instr_dcmpg,
	handle_instr_ifeq,
	handle_instr_ifne,
	handle_instr_iflt,
	handle_instr_ifge,
	handle_instr_ifgt,
	handle_instr_ifle,
	handle_instr_if_icmpeq,
	handle_instr_if_icmpne,
	handle_instr_if_icmplt,
	handle_instr_if_icmpge,
	handle_instr_if_icmpgt,
	handle_instr_if_icmple,
	handle_instr_if_acmpeq,
	handle_instr_if_acmpne,
	handle_instr_goto,
	handle_instr_jsr,
	handle_instr_ret,
	handle_instr_tableswitch,
	handle_instr_lookupswitch,
	handle_instr_ireturn,
	handle_instr_lreturn,
	handle_instr_freturn,
	handle_instr_dreturn,
	handle_instr_areturn,
	handle_instr_return,
	handle_instr_getstatic,
	handle_instr_putstatic,
	handle_instr_getfield,
	handle_instr_putfield,
	handle_instr_invokevirtual,
	handle_instr_invokespecial,
	handle_instr_invokestatic,
	handle_instr_invokeinterface,
	handle_instr_invokedynamic,
	handle_instr_new,
	handle_instr_newarray,
	handle_instr_anewarray,
	handle_instr_arraylength,
	handle_instr_athrow,
	handle_instr_checkcast,
	handle_instr_instanceof,
	handle_instr_monitorenter,
	handle_instr_monitorexit,
	handle_instr_wide,
	handle_instr_multianewarray,
	handle_instr_ifnull,
	handle_instr_ifnonnull,
	handle_instr_goto_w,
	handle_instr_jsr_w,
	handle_instr_breakpoint,
	handle_instr_unknown,
	handle_instr_unknown,
	handle_instr_unknown,
	handle_instr_unknown,
	handle_instr_unknown,
	handle_instr_unknown,
	handle_instr_unknown,
	handle_instr_unknown,
	handle_instr_unknown,
	handle_instr_unknown,
	handle_instr_unknown,
	handle_instr_unknown,
	handle_instr_unknown,
	handle_instr_unknown,
	handle_instr_unknown,
	handle_instr_unknown,
	handle_instr_unknown,
	handle_instr_unknown,
	handle_instr_unknown,
	handle_instr_unknown,
	handle_instr_unknown,
	handle_instr_unknown,
	handle_instr_unknown,
	handle_instr_unknown,
	handle_instr_unknown,
	handle_instr_unknown,
	handle_instr_unknown,
	handle_instr_unknown,
	handle_instr_unknown,
	handle_instr_unknown,
	handle_instr_unknown,
	handle_instr_unknown,
	handle_instr_unknown,
	handle_instr_unknown,
	handle_instr_unknown,
	handle_instr_unknown,
	handle_instr_unknown,
	handle_instr_unknown,
	handle_instr_unknown,
	handle_instr_unknown,
	handle_instr_unknown,
	handle_instr_unknown,
	handle_instr_unknown,
	handle_instr_unknown,
	handle_instr_unknown,
	handle_instr_unknown,
	handle_instr_unknown,
	handle_instr_unknown,
	handle_instr_unknown,
	handle_instr_unknown,
	handle_instr_unknown,
	handle_instr_impdep1,
	handle_instr_impdep2,
};